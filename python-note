python学习笔记
 
1.
 编程语言是用来定义计算机程序的语言，用来向计算机发出指令
python语言是一种面向对象的解释型高级编程语言，并且是强类型的动态脚本语言

2.解释型语言：使用专门的解释器对源码程序逐行解释程特定平台机器并立即执行，是代码在执行时才被解释器一行行动态翻译执行，而不是执行之前就完成翻译

一、检查bug
输入错误  缩进错误  语法错误  命名错误
SnytaxError：语法错误   line?代表第几行
IndentationError:  缩进错误    
NameError： 命名错误 
TypeError‌是类型错误,编程中常见的一种错误类型，通常发生在类型不匹配的情况下。具体来说，‌TypeError‌表示某个操作或函数接收到了错误类型的对象，导致操作无法正常进行

二、注释
#  单行注释 可以放在任何位置 放在代码前面不会被执行 
多行注释，用三引号包含的内容，可以是三对单引号，也可以是三对双引号 

三、快捷键
选中代码 Ctrl+/可以添加注释，也可以取消注释
其他快捷键：
Ctrl+Z  撤销      Ctrl+C 复制      Ctrl+V 粘贴      Ctrl+F 查找

四、输出函数
values 值，表示可以一次输出多个对象。输出多个对象时，需要用，隔开
sep     值，用来间隔多个对象，默认值是一个空格
end     值，用来设定以什么结尾。默认值是换行符 \n， 我们可以换成其他字符串

五、变量与标识符
标识符： 程序员定义的变量名、函数名
只能由数字、字母、下划线组成     不能以数字为开头    不能是关键字    严格区分大小写

六、数值类型
数值（Number）     检测数据类型的方法是type（）
整数   int 
浮点型   float
布尔型   bool       一个为True   一个为False   可以当整数对待，True相当于整数1   Flase相当于整数0      需严格区分大小写
复数    complex     固定写法  z = a + bj     a是实部，b是虚部，j是虚数单位，虚数单位只能是j，不能改
字符串类型    str    特点需要加上引号，单双引号都可以，包含多行内容也可以使用三引号

七、格式化输出
占位符是生成一定格式的字符串的作用         
占位符有三种方式   1.%             2.format（）          3.格式化  f
%s 常用于字符串            %d 常用于整数 print("%06d" %a) 表示输出的整数显示位数，不足的话用0b补全，超出当前位数则原样输出
%f 常用于浮点数 默认后六位小数,遵循四舍五入原则超出部分   print("%3f" %a)用于设置小数点位数
%% print("我是%%的1%%" % ())  
f格式化    格式：f"{表达式}"     例如print(f"str{}int{}")

八、算术，转义、输入
运算符    + 加              - 减              * 乘           /  除（除数不能为0）       //  取整余（取商的整数部分，向下取整）          % 取余数           **  幂，又称次方
运算规则     先乘车后加减，同级运算符从左到右，可以用（）调整计算的优先级
优先级排序 幂（最高优先级）>乘、除、取余、取整除、加减        
赋值运算符（将一个变量的值赋给另一个变量） 纯数字不能使用，需要提前定义变量
= 简单的赋值运算符      += 加法赋值运算符     -= 减法赋值运算符     *= 乘法赋值运算符        /= 除法赋值运算符     %= 取余赋值运算符      **= 幂赋值运算符     //= 取整数赋值运算符      
input（）输入文本    变量 = input（）保存
转义字符    r来表示引号内部的字符串默认取消转义
 \（在行尾时）续行符       \\ 反斜杠符号       \'单引号      \''双引号      \a 响铃       \b 退格          \e 转义      \000 空       
\n 换行   \v 纵向制表符    \t    横向制表符(通常表示空四个字符，也称缩进）     \r 回车（将当前位置移到本行开头）        \f  换页           \oyy 八进制数，yy代表的字符，例如\o12代表换行       \xyy 十六进制数，yy代表字符，例如： \x0a代表换行

九、if判断、运算符、if-else、if嵌套
if判断  if 要判断的条件： 条件成立的时候要做的事情（注意结尾判断条件的冒号结尾）
比较运算符 
  == 比较两个变量值是否相等，相等的话返回为True，不相等返回为False
  != 比较两个变量值是否相等，不相等的话返回为True，相等返回为False
  > 比较       < 比较 <= >=     
逻辑运算符 and（与）   左右两边都符合才为True
 or（或）     只需要一边符合就为True
 not（非）    表示相反的结果
三目运算符（三元表达式）
if-else  if 条件： 满足条件要做的事情       else： 不满足条件要做的事情 二选一
if-elif   if 条件： elif 条件2：   elif 条件3：  多选一
if-elif-else    if 条件： elif 条件2：   elif 条件3： else： 不满足条件  多选一，并且所有条件都不符合的这样一个情况
if嵌套   缩进决定层级   内层if判断和外层if判断都可以是if-else结构

十、循环语句
while循环               while条件：循环体（条件满足时段做的事情）改变变量      while True：循环体（要循环做的事情）  没有改变变量会一直循环执行
死循环   while True : 循环体  无限循环、条件一直为真    只要条件不是False或0，其他单独存在的值也会是死循环
while循环嵌套  就是while里面有while  例while条件1：  条件1满足 2满足  while 条件2 条件2满足 22满足

for循环 基本格式 for 临时变量 in 可迭代对象： 循环体  注意冒号和缩进  
可迭代对象就是要去遍历取值的整体，现在的话只需要记住字符串就是可迭代对象

range函数  用来记录循环次数，相当于一个计数器   格式for i in range（）：
参数     start(等于)    stop(等于end）   step（步长）   遵循包前不包后 [)   
range()里面只写一个数，这个数就是循环的次数，默认从0开始     写两个数字代表开始位置，后面数字代表结束位置
关键字   break  中途退出，结束循环    continue  结束当前循环进入下一循环    都是专门在循环中使用的关键字，只能放在循环内

十一、字符串编码，列表
字符串编码本质上就是二进制数据与语言文字的一一对应关系
ASCLL编码于1967年制定，表示英语及西欧语言
GB2312于1980年国家简体中文字符集，兼容ASCLL
GBK于1995年GB2312扩展字符集，支持繁体字，兼容GB2312
Unicode，1991年国际标准组织统一标准字符集      Unicode，所有字符都是2个字节，字符于数字之间转换速度更快，但是占用空间大.
UTF-8，1992年，不定长编码    精准，对不同的字符用不同的长度表示，节省空间，但是字符与数字的转换速度较慢，每次都需要计算字符要用多少个字节来表示
 
字符串编码的转换：编码：encode（）将其他编码的字符串转换成Unicode编码
解码：decode（）将unicdoe编码转换成其他编码的字符串

字符串的常见操作
1.   + 字符串的拼接 整型相加，在整型里面是算术运算符，在字符串中是拼接的
2.   *  在整型里面是乘，在字符串里面是重复输出的意思，例如“好好学习”*5，需要多少次输出，*号后面就写多少
成员运算符：就是检查字符串中是否包含了某个子字符串（即某个字符或多个字符）。in ： 如果包含的话，返回True，不包含返回False。还有一个是not in ： 他是如果不包含的话返回True，包含返回False
下标/索引    python中下标从0开始，写法：字符串名【下标值】注意：从右往左数，下标是从-1开始，，-1，-2，-3
